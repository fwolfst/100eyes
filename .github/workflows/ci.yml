name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      RUBYOPT: "-W:no-deprecated"
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432

    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test
        ports: [ "5432:5432" ]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install ruby
        uses: actions/setup-ruby@v1
        with: { ruby-version: 2.7.1 }

      - name: Cache Ruby dependencies
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Install Ruby dependencies
        run: |
          gem install bundler
          bundle config set path 'vendor/bundle'
          bundle install

      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install NPM dependencies
        run: yarn install

      - name: Build packs
        run: bin/rails webpacker:compile

      - name: Run database migrations
        run: bin/rails db:migrate

      - name: Run tests
        run: bin/rails test

  deploy:
    runs-on: ubuntu-latest

    needs: test

    if: ${{ github.ref == 'master' }}

    env:
      RUBYOPT: "-W:no-deprecated"
      RAILS_ENV: production
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install ruby
        uses: actions/setup-ruby@v1
        with: { ruby-version: 2.7.1 }

      - name: Cache Ruby dependencies
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Install Ruby dependencies
        run: |
          gem install bundler
          bundle config set path 'vendor/bundle'
          bundle install

      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install NPM dependencies
        run: yarn install

      - name: Build packs
        run: bin/rails webpacker:compile

      - name: Deploy app using rsync
        run: ./scripts/deploy
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_USER_PRIVATE_KEY: ${{ secrets.DEPLOY_USER_PRIVATE_KEY }}
          DEPLOY_TARGET: ${{ secrets.DEPLOY_TARGET }}
          DEPLOY_TARGET_PUBLIC_KEY: ${{ secrets.DEPLOY_TARGET_PUBLIC_KEY }}
